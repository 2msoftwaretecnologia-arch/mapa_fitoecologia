import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

# ============================================================
# üîß IMPORTA√á√ïES INTERNAS
# ============================================================
# 'manipular_windos' ‚Üí fun√ß√µes auxiliares para pausas, janelas, etc.
# 'janelas_dinamicas' ‚Üí exibe caixas de di√°logo interativas (alertas Tkinter)
from buildkite.Windows.manipular_windos import *
from buildkite.interfaces.janelas_dinamicas import *

# ============================================================
# üì¶ IMPORTA√á√ïES EXTERNAS
# ============================================================
# 'pynput.mouse' ‚Üí usado para capturar cliques do mouse fora da janela Tkinter
# 'threading' ‚Üí usado para sincronizar o evento de clique
from pynput import mouse
import threading


def capturar_clique(texto: str) -> tuple[int, int]:
    """
    ============================================================
    üß† FUN√á√ÉO: capturar_clique(texto)
    ============================================================

    üìã DESCRI√á√ÉO:
        Exibe uma janela de aviso solicitando que o usu√°rio clique
        em algum ponto da tela (fora da aplica√ß√£o), e captura as
        coordenadas (x, y) exatas do clique do mouse.

        Essa fun√ß√£o √© extremamente √∫til em automa√ß√µes gr√°ficas com
        PyAutoGUI, ArcGIS, QGIS ou outras interfaces onde √© preciso
        registrar posi√ß√µes exatas na tela para posterior automa√ß√£o.

        O processo √© feito de forma **bloqueante**:
        - Primeiro, mostra uma janela explicando o que o usu√°rio deve fazer.
        - Depois, aguarda at√© que o usu√°rio clique em qualquer lugar.
        - Ao detectar o clique, registra as coordenadas e retorna.

    ‚öôÔ∏è PAR√ÇMETROS:
        texto (str):
            Mensagem que ser√° exibida na janela de aviso.
            Exemplo: "Clique sobre o ponto de refer√™ncia no mapa."

    üéØ RETORNA:
        tuple[int, int]:
            Uma tupla contendo as coordenadas do clique (x, y) na tela.

            Exemplo:
            (1250, 620)

    üí° EXEMPLO DE USO:
        x, y = capturar_clique("Clique no local onde deseja posicionar o texto")
        print(f"Coordenadas capturadas: X={x}, Y={y}")
    ============================================================
    """

    # ============================================================
    # ü™ü MOSTRA UMA JANELA INFORMATIVA
    # ============================================================
    # A fun√ß√£o 'janela_pausa' exibe uma caixa de di√°logo
    # (janela Tkinter) informando o que o usu√°rio deve fazer.
    janela_pausa(texto)

    # ============================================================
    # üéØ VARI√ÅVEIS INTERNAS
    # ============================================================
    coordenadas = {}            # Dicion√°rio que armazenar√° X e Y
    done = threading.Event()    # Evento que sinaliza quando o clique ocorrer

    # ============================================================
    # üñ±Ô∏è FUN√á√ÉO INTERNA DE CALLBACK
    # ============================================================
    # Esta fun√ß√£o √© chamada automaticamente pelo Listener do mouse
    # toda vez que o usu√°rio pressiona ou solta um bot√£o.
    def on_click(x, y, pressed):
        if pressed:
            coordenadas['x'] = x
            coordenadas['y'] = y
            done.set()  # Sinaliza que j√° capturou o clique
            return False  # Para o listener (n√£o continua ouvindo)

    # ============================================================
    # üéß INICIALIZA O LISTENER DO MOUSE
    # ============================================================
    listener = mouse.Listener(on_click=on_click)
    listener.start()

    # Aguarda o evento de clique sem travar a interface gr√°fica
    done.wait()

    # Para o listener ap√≥s capturar as coordenadas
    listener.stop()

    # Pequena pausa para garantir que o listener finalize corretamente
    esperar(0.5)

    # ============================================================
    # üì§ RETORNA AS COORDENADAS CAPTURADAS
    # ============================================================
    return coordenadas['x'], coordenadas['y']
